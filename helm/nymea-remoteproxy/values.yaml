# Default values for nymea-remoteproxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry.consolinno-it.de/leafletfirmware/nymea/nymea-remoteproxy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imageCredentials:
  registry: registry.consolinno-it.de/leafletfirmware/nymea/nymea-remoteproxy
  username: ""
  password: ""

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Todo: link this service port from ingress in k8s to lb
service:
  type: ClusterIP
  port: 22130

resources:
  limits:
    memory: 256Mi
  requests:
    cpu: 10m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

organization: "Consolinno GmbH"
#dnsname: hems-remoteproxy.consolinno-it.de #live
#dnsname: hems-remoteproxy.services.consolinno.de #live k8s
#dnsname: hems-remoteproxy.services-qa.consolinno.de #qa
dnsname: hems-remoteproxy.services-test.consolinno-it.de #test, default
issuerRef: letsencrypt-staging

environment:
  workaround_missing_leaf_certificate: "yes"

config:
  ProxyServer:
    name: nymea-remoteproxy
    writeLogs: false
    logFile: /var/log/nymea-remoteproxy.log
    logEngineEnabled: false
    monitorSocket: /tmp/nymea-remoteproxy-monitor.sock
    jsonRpcTimeout: 10000
    authenticationTimeout: 8000
    inactiveTimeout: 8000
    aloneTimeout: 8000
  AWS: 
    region: eu-west-1
    authorizerLambdaFunction: system-services-authorizer-dev-checkToken
    awsCredentialsUrl: http://169.254.169.254/latest/meta-data/iam/security-credentials/EC2-Remote-Connection-Proxy-Role
  SSL: 
    enabled: true
    certificate: /workaround_missing_leaf_certificate/tls_0.crt
    certificateKey: /ssl/tls.key
    certificateChain: /workaround_missing_leaf_certificate/tls_1.crt
  WebSocketServer: 
    host: 127.0.0.1
    port: 443
  TcpServer: 
    host: 127.0.0.1
    port: 80
  WebSocketServerTunnelProxy: 
    host: 127.0.0.1
    port: 2212
  TcpServerTunnelProxy: 
    host: 0.0.0.0
    port: 2213
